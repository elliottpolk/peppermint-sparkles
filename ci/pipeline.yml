---

groups:
- name: dev
  jobs:
  - unit-test-dev
  - deploy-dev

- name: tst
  jobs:
  - unit-test-tst
  - deploy-tst

resource_types:
- name: artifactory
  type: docker-image
  source:
    insecure_registries: ["10.234.24.211:443"]
    repository: 10.234.24.211:443/artifactory-resource

- name: cf-http-api
  type: docker-image
  source:
    repository: 10.234.24.211:443/http-api-resource
    insecure_registries: ["10.234.24.211:443"]
    tag: latest

resources:
- name: binary-repo
  type: artifactory
  source:
    endpoint: {{ARTIFACTORY_URI}}
    repository: {{ARTIFACTORY_REPO}}
    regex: "peppermint-sparkles-v(?<version>[0-9].[0-9].[0-9]).tar.bz2"
    username: {{ARTIFACTORY_USER}}
    password: {{ARTIFACTORY_PASS}}
    skip_ssl_verification: true

- name: git-source-dev
  type: git
  source:
    branch: {{GIT_BRANCH}}
    tag_filter: "*.dev"
    uri: {{GIT_URI}}
    private_key: {{GIT_PRIVATE_KEY}}
    skip_ssl_verification: true

- name: deploy-dev-resource
  type: cf-http-api
  source:
    uri: {{CF_HTTP_URI}}
    method: POST
    debug: true
    ssl_verify: false
    json:
      buildTeamName: "{BUILD_TEAM_NAME}"         #populated automatically
      buildId: "{BUILD_ID}"                      #populated automatically
      buildName: "{BUILD_NAME}"                  #populated automatically
      buildJobName: "{BUILD_JOB_NAME}"           #populated automatically
      buildPipelineName: "{BUILD_PIPELINE_NAME}" #populated automatically
      org: "GSD-CAC-DEV"

      #Full path to script which will execute 'cf push' and optionally 'cf create-service' commands
      #the 'source' folder name here should match with the name specified in the 'get' in the src-dev git resource below
      deploy_script: "peppermint-sparkles/ci/scripts/push.sh"

      #Specifies the PCF environment
      division: "CAC"

      #The name of the task which the push script specified above should run after
      buildTaskName: "dummy"

- name: git-source-test
  type: git
  source:
    branch: {{GIT_BRANCH}}
    tag_filter: "*.tst"
    uri: {{GIT_URI}}
    private_key: {{GIT_PRIVATE_KEY}}
    skip_ssl_verification: true

# - name: deploy-tst-resource
#   type: cf-http-api
#   source:
#     uri: {{CF_HTTP_URI}}
#     method: POST
#     debug: true
#     ssl_verify: false
#     json:
#       buildTeamName: "{BUILD_TEAM_NAME}"         #populated automatically
#       buildId: "{BUILD_ID}"                      #populated automatically
#       buildName: "{BUILD_NAME}"                  #populated automatically
#       buildJobName: "{BUILD_JOB_NAME}"           #populated automatically
#       buildPipelineName: "{BUILD_PIPELINE_NAME}" #populated automatically
#       org: "GSD-CAC-DEV"

#       #Full path to script which will execute 'cf push' and optionally 'cf create-service' commands
#       #the 'source' folder name here should match with the name specified in the 'get' in the src-dev git resource below
#       deploy_script: "peppermint-sparkles/ci/scripts/push.sh"

#       #Specifies the PCF environment
#       division: "CAC"

#       #The name of the task which the push script specified above should run after
#       buildTaskName: "dummy"

jobs:
# DEV environment
- name: unit-test-dev
  plan:
  - get: peppermint-sparkles
    resource: git-source-dev
    trigger: true
  - task: unit
    file: peppermint-sparkles/ci/tasks/unit_test.yml

- name: deploy-dev
  serial: true
  plan:
  - get: peppermint-sparkles
    resource: git-source-dev 
    trigger: true
    passed: [unit-test-dev]
  - get: peppermint-sparkles/build/bin
    resource: binary-repo
  - task: dummy
    params:
      ENV: dev
      TERM: xterm
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: 10.234.24.211:443/alpine
          insecure_registries: ["10.234.24.211:443"]
          tag: latest
      inputs:
      - name: peppermint-sparkles
      run:
        path: sh
        args:
        - -exec
        - |
          set -o errexit
          set -o xtrace

          echo "running dummy, dummy"

  - put: deploy-dev-resource

# TST environment
- name: unit-test-tst
  plan:
  - get: peppermint-sparkles
    resource: git-source-test
    trigger: true
  - task: unit
    file: peppermint-sparkles/ci/tasks/unit_test.yml

- name: deploy-tst
  serial: true
  plan:
  - get: peppermint-sparkles
    resource: git-source-test
    trigger: true
    passed: [unit-test-tst]
  - get: peppermint-sparkles/build/bin
    resource: binary-repo
  - task: redis
    file: peppermint-sparkles/ci/tasks/redis_service.yml
    params:
      TERM: xterm
      CF_API: {{PCF_API}}
      CF_USER: {{PCF_TST_USER}}
      CF_PASSWORD: {{PCF_TST_PASS}}
      CF_ORG: GSD-CAC-TST
      CF_SPACE: OA-MONTREAL-CAC-TST
      REDIS_PLAN: shared-vm
      REDIS_NAME: rainbow-dash-redis
